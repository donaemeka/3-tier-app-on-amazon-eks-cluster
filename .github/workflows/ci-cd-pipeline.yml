# .github/workflows/ci-cd-pipeline.yml

name: CI/CD Pipeline - Voting App
run-name: ${{ github.actor }} is deploying to EKS

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.sha }}  # Unique tag based on commit SHA

    steps:
    # 1Ô∏è‚É£ Checkout code
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # 2Ô∏è‚É£ Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # 3Ô∏è‚É£ Login to Docker Hub
    - name: Docker Hub Login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 4Ô∏è‚É£ Build and push Vote image
    - name: Build & Push Vote Image
      uses: docker/build-push-action@v5
      with:
        context: ./vote
        file: ./vote/Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/voting-app-vote:${{ env.IMAGE_TAG }}
          ${{ secrets.DOCKER_USERNAME }}/voting-app-vote:latest

    # 5Ô∏è‚É£ Build and push Result image
    - name: Build & Push Result Image
      uses: docker/build-push-action@v5
      with:
        context: ./result
        file: ./result/Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/voting-app-result:${{ env.IMAGE_TAG }}
          ${{ secrets.DOCKER_USERNAME }}/voting-app-result:latest

    # 6Ô∏è‚É£ Build and push Worker image
    - name: Build & Push Worker Image
      uses: docker/build-push-action@v5
      with:
        context: ./worker
        file: ./worker/Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/voting-app-worker:${{ env.IMAGE_TAG }}
          ${{ secrets.DOCKER_USERNAME }}/voting-app-worker:latest

    # 7Ô∏è‚É£ Configure AWS credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # 8Ô∏è‚É£ Install kubectl
    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
        kubectl version --client

    # 9Ô∏è‚É£ Update kubeconfig
    - name: Update kubeconfig for EKS
      run: |
        aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.AWS_CLUSTER }}

    # üîü Update image tags in Kubernetes manifests
    - name: Update Kubernetes Manifests with New Image Tags
      run: |
        echo "Updating image tags in Kubernetes manifests..."
        sed -i "s|donaemeka/voting-app-vote:latest|${{ secrets.DOCKER_USERNAME }}/voting-app-vote:${{ env.IMAGE_TAG }}|g" k8s/*.yaml
        sed -i "s|donaemeka/voting-app-result:latest|${{ secrets.DOCKER_USERNAME }}/voting-app-result:${{ env.IMAGE_TAG }}|g" k8s/*.yaml
        sed -i "s|donaemeka/voting-app-worker:latest|${{ secrets.DOCKER_USERNAME }}/voting-app-worker:${{ env.IMAGE_TAG }}|g" k8s/*.yaml
        echo "‚úÖ Kubernetes manifests updated"

    # 11Ô∏è‚É£ Deploy to EKS
    - name: Deploy to EKS
      run: |
        echo "Deploying to EKS cluster..."
        kubectl apply -f k8s/
        kubectl get pods -o wide
        kubectl get services
        kubectl get ingress

    # 12Ô∏è‚É£ Verify deployment
    - name: Verify Deployment
      run: |
        kubectl rollout status deployment/vote --timeout=300s
        kubectl rollout status deployment/result --timeout=300s
        kubectl rollout status deployment/worker --timeout=300s
        echo "‚úÖ All deployments successful!"
